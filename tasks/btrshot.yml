---
- name: "set btrshot command for {{ tag }} snapshots"
  set_fact:
    _btrshot_cmd: "{% for device, subvolumes in _snapshot_subvolumes | dictsort %}[ -e {{ device | quote }} ] && for subvol in {{ subvolumes | reject('in', btrshot_no_snapshot[device] | default([])) | map('quote') | join(' ') }}; do btrshot.sh --read-only --quiet --device {{ device | quote }} -- \"${subvol}\" snapshots {{ tag | regex_replace('%.*', '') | quote }} {{ btrshot_snapshot_keep[tag] | mandatory | regex_replace('%.*', '') | quote }}; done; {% endfor %}"

- name: 'create cronjob directory'
  file:
    path: "/etc/cron.{{ btrshot_snapshot_frequency[tag] }}"
    state: directory
  when: "btrshot_snapshot_frequency[tag] in ['hourly', 'daily', 'weekly', 'monthly']"

- name: 'create cronjob'
  copy:
    dest: "/etc/cron.{{ btrshot_snapshot_frequency[tag] }}/btrshot_{{ tag | replace('/', '_') }}"
    content: "#!/bin/sh\n# {{ tag }} btrfs snapshots\nPATH=\"$PATH:/usr/local/sbin\"\n{{ _btrshot_cmd }}\n"
    owner: root
    group: root
    mode: 0755
  when: "btrshot_snapshot_frequency[tag] in ['hourly', 'daily', 'weekly', 'monthly']"

- name: 'create cronjob directory'
  file:
    path: '/etc/cron.d'
    state: directory
  when: "ansible_facts['os_family'] != 'Alpine' and btrshot_snapshot_frequency[tag] not in ['hourly', 'daily', 'weekly', 'monthly']"

- name: 'configure cronjob environment'
  cron:
    env: true
    name: PATH
    value: '/bin:/sbin:/usr/bin:/usr/sbin:/usr/local/sbin'
    user: root
    cron_file: "{{ (ansible_facts['os_family'] != 'Alpine') | ternary('btrshot', omit) }}"
    state: present
  when: "btrshot_snapshot_frequency[tag] not in ['hourly', 'daily', 'weekly', 'monthly']"

- name: 'create cronjob'
  cron:
    name: "{{ tag }} btrfs snapshots"
    job: "{{ _btrshot_cmd }}"
    user: root
    cron_file: "{{ (ansible_facts['os_family'] != 'Alpine') | ternary('btrshot', omit) }}"
    state: present
    minute: "{{ btrshot_snapshot_frequency[tag].split()[0] }}"
    hour: "{{ btrshot_snapshot_frequency[tag].split()[1] }}"
    day: "{{ btrshot_snapshot_frequency[tag].split()[2] }}"
    month: "{{ btrshot_snapshot_frequency[tag].split()[3] }}"
    weekday: "{{ btrshot_snapshot_frequency[tag].split()[4] }}"
  when: "btrshot_snapshot_frequency[tag] not in ['hourly', 'daily', 'weekly', 'monthly']"
